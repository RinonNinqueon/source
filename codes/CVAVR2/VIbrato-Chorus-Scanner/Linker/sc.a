;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.04.4a Advanced
;Automatic Program Generator
;© Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 10.01.2013
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 16,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#define SetBit(x,y) (x|=y)
;#define ClrBit(x,y) (x&=~y)
;#define TestBit(x,y) (x&y)
;
;// I2C Bus functions
;#asm
;PCODE: $0000000D VOL: 0
   .equ __i2c_port=0x12 ;PORTD
;PCODE: $0000000E VOL: 0
   .equ __sda_bit=0
;PCODE: $0000000F VOL: 0
   .equ __scl_bit=1
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0023 #endasm
;#include <i2c.h>
;
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $00000012 VOL: 0
   .equ __lcd_port=0x15 ;PORTC
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0029 #endasm
;#include <lcd.h>
;#include <delay.h>
;#include <stdio.h>
;#include <24LC16.h>

	.CSEG
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;	block -> Y+3
;	addr -> Y+2
;	data -> Y+1
;	res -> R17
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;	block -> Y+2
;	addr -> Y+1
;	res -> R17
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;
;unsigned char val1, val2, val3, val4, val5;
;void LCDWriteInt(unsigned int val, unsigned char move)
; 0000 0031 {
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0032     /***************************************************************
; 0000 0033     This function writes a integer type value to LCD module
; 0000 0034 
; 0000 0035     Arguments:
; 0000 0036 	1)unsigned char val	: Value to print
; 0000 0037 
; 0000 0038 	2)unsigned char field_length :total length of field in which the value is printed
; 0000 0039 	must be between 1-3 if it is -1 the field length is no of digits in the val
; 0000 003A 
; 0000 003B 	****************************************************************/
; 0000 003C 
; 0000 003D     val1 = val % 10;
;	val -> Y+1
;	move -> Y+0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 003E     val2 = (val / 10) % 10;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 003F     val3 = (val / 100) % 10;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0040     val4 = (val / 1000) % 10;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0041     val5 = (val / 10000) % 10;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0042 
; 0000 0043     if (val5 != 0)
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0044         lcd_putchar(48 + val5);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0045     else
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0046     if (move > 4)
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0047         lcd_putchar(' ');
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0048     if (val4 != 0 || val5 != 0)
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0049         lcd_putchar(48 + val4);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 004A     else
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 004B     if (move > 3)
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 004C         lcd_putchar(' ');
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 004D     if (val3 != 0 || val4 != 0 || val5 != 0)
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 004E         lcd_putchar(48 + val3);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 004F     else
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0050     if (move > 2)
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0051         lcd_putchar(' ');
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0052     if (val2 != 0 || val3 != 0 || val4 != 0 || val5 != 0)
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0053         lcd_putchar(48 + val2);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 0054     else
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 0055     if (move > 1)
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 0056         lcd_putchar(' ');
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0057     lcd_putchar(48 + val1);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0058 }
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;
;
;#include "patterns.c"
;#define MAX_ITEMS       30
;#define MAX_PATTERNS    8
;#define MAX_OUT         16
;
;unsigned char current_pattern = 0;
;
;typedef struct type_pattern
;{
;    unsigned char length;
;    unsigned char out[MAX_ITEMS];
;} t_pattern;
;
;flash t_pattern v1 = {14,
;                                {0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x16, 0x15, 0x14, 0x13, 0x12, 0x11,
;                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};
;
;flash t_pattern v2 = {14,
;                                {0x10, 0x12, 0x13, 0x14, 0x17, 0x09, 0x0A, 0x0B, 0x0A, 0x09, 0x17, 0x14, 0x13, 0x12,
;                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};
;
;flash t_pattern v3 = {14,
;                                {0x11, 0x13, 0x15, 0x08, 0x0A, 0x0B, 0x0C, 0x0D, 0x0C, 0x0B, 0x0A, 0x08, 0x15, 0x13,
;                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};
;unsigned int block = 0, addr = 0;
;unsigned char _e_read, i, j;
;unsigned char t_preset[] = "Preset";

	.DSEG
;unsigned char t_item[] = "Item";
;
;void inline check_ab()
; 0000 005B {

	.CSEG
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;    if (addr > 255)
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;    {
;        addr = 0;
;PCODE: $0000010F VOL: 0
;        block++;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;    }
;}
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;
;void write_pattern(t_pattern patt, unsigned char num)
;{
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;    #asm("cli")
;	patt -> Y+1
;	num -> Y+0
;PCODE: $00000118 VOL: 0
	cli
;PCODE: $00000119 VOL: 0
;    lcd_clear();
;PCODE: $0000011A VOL: 0
;    lcd_puts("Memory write");
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;    addr = 3 + num * (MAX_ITEMS + 1);
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;    block = addr / 256;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;    addr = addr % 256;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;
;    write_var(block, addr, patt.length);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;
;    addr++;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;    check_ab();
;PCODE: $00000132 VOL: 0
;
;    lcd_gotoxy(0, 1);
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;
;    lcd_puts(t_preset);
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;    lcd_putchar(' ');
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;
;    LCDWriteInt(num, 0);
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;
;    lcd_putchar(' ');
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;    lcd_puts(t_item);
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;    lcd_putchar(' ');
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;
;    for(j = 0; j < MAX_ITEMS; j++)
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;    {
;        lcd_gotoxy(14, 1);
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;        LCDWriteInt(j, 0);
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;        lcd_putchar(' ');
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;        write_var(block, addr, patt.out[j]);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;        addr++;
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;        check_ab();
;PCODE: $00000171 VOL: 0
;    }
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;    #asm("sei")
;PCODE: $00000178 VOL: 0
	sei
;PCODE: $00000179 VOL: 0
;}
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0

	.DSEG
_0x2A:
	.BYTE 0xD
;
;t_pattern read_pattern(unsigned char num)
;{

	.CSEG
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;    t_pattern patt;
;
;    #asm("cli")
;PCODE: $0000017F VOL: 0
;	num -> Y+62
;	patt -> Y+0
;PCODE: $00000180 VOL: 0
	cli
;PCODE: $00000181 VOL: 0
;    lcd_clear();
;PCODE: $00000182 VOL: 0
;    lcd_puts("Memory read");
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;    addr = 3 + num * (MAX_ITEMS + 1);
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;    block = addr / 256;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;    addr = addr % 256;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;
;    patt.length = read_var(block, addr);
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;
;    addr++;
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;    check_ab();
;PCODE: $00000199 VOL: 0
;
;    lcd_gotoxy(0, 1);
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;    lcd_puts(t_preset);
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;    lcd_putchar(' ');
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;    LCDWriteInt(num, 0);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;    lcd_putchar(' ');
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;    lcd_puts(t_item);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;    lcd_putchar(' ');
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;
;    for(j = 0; j < MAX_ITEMS; j++)
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;    {
;        lcd_gotoxy(14, 1);
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;        LCDWriteInt(j, 0);
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;        lcd_putchar(' ');
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;        patt.out[j] = read_var(block, addr);
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;        addr++;
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;        check_ab();
;PCODE: $000001D9 VOL: 0
;    }
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;    #asm("sei")
;PCODE: $000001E0 VOL: 0
	sei
;PCODE: $000001E1 VOL: 0
;    return patt;
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;}
;PCODE: $000001EB VOL: 0

	.DSEG
_0x2E:
	.BYTE 0xC
;
;unsigned char init_check()
;{

	.CSEG
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;    _e_read = read_var(0, 0);
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;    if (_e_read != 0x19)
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;        return 1;
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;    _e_read = read_var(0, 1);
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;    if (_e_read != 0x08)
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;        return 1;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;    _e_read = read_var(0, 2);
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;    if (_e_read != 0x1E)
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;        return 1;
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;    return 0;
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;}
;PCODE: $00000214 VOL: 0
;
;void zero_init()
;{
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;    lcd_clear();
;PCODE: $00000217 VOL: 0
;    lcd_puts("Memory init");
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;    write_var(0, 0, 0x19);
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;    write_var(0, 1, 0x08);
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;    write_var(0, 2, 0x1E);  //30
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;
;    block = 0;
;PCODE: $00000231 VOL: 0
;    addr = 3;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;    for(i = 0; i < MAX_PATTERNS; i++)
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;    {
;        write_var(block, addr, v1.length);
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;        addr++;
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;            check_ab();
;PCODE: $00000244 VOL: 0
;        for(j = 0; j < MAX_ITEMS; j++)
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;        {
;            lcd_gotoxy(0, 1);
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;
;            lcd_puts(t_preset);
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;            lcd_putchar(' ');
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;
;            LCDWriteInt(i, 0);
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;
;            lcd_putchar(' ');
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;            lcd_puts(t_item);
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;            lcd_putchar(' ');
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;
;            LCDWriteInt(j, 0);
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;            lcd_putchar(' ');
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;
;            write_var(block, addr, v1.out[j]);
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;            addr++;
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;            check_ab();
;PCODE: $00000280 VOL: 0
;        }
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;    }
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;}
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0

	.DSEG
_0x35:
	.BYTE 0xC
;#include "encoder.c"
;#define _dir_cnt 4
;#define _dir_cnt2 8
;
;unsigned char dir1 = 1, dir2 = 1, dir_cnt1 = _dir_cnt, dir_cnt2 = _dir_cnt, e11 = 1, e12 = 1, e21 = 1, e22 = 1, enc1 = 0, enc2 = 0;
;
;void inline encoder_main(unsigned char port1, unsigned char pin11, unsigned char pin12, unsigned char port2, unsigned char pin21, unsigned char pin22)
; 0000 005C {

	.CSEG
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;    if (TestBit(port1, pin11) && TestBit(port1, pin12))
;	port1 -> Y+5
;	pin11 -> Y+4
;	pin12 -> Y+3
;	port2 -> Y+2
;	pin21 -> Y+1
;	pin22 -> Y+0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;        e11 = 0;
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;    if (!TestBit(port1, pin11) && TestBit(port1, pin12))
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;        e11 = 1;
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;    if (!TestBit(port1, pin11) && !TestBit(port1, pin12))
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;        e11 = 2;
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;    if (TestBit(port1, pin11) && !TestBit(port1, pin12))
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;        e11 = 3;
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;
;    if (TestBit(port2, pin21) && TestBit(port2, pin22))
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;        e21 = 0;
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;    if (!TestBit(port2, pin21) && TestBit(port2, pin22))
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;        e21 = 1;
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;    if (!TestBit(port2, pin21) && !TestBit(port2, pin22))
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;        e21 = 2;
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;    if (TestBit(port2, pin21) && !TestBit(port2, pin22))
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;        e21 = 3;
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;
;    switch (e12)
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;    {
;        case 0: if (e11 == 1)
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;                    dir1 = 0;
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;                if (e11 == 3)
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;                    dir1 = 2;
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;                break;
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;        case 1: if (e11 == 2)
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;                    dir1 = 0;
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;                if (e11 == 0)
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;                    dir1 = 2;
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;                break;
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;        case 2: if (e11 == 3)
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;                    dir1 = 0;
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;                if (e11 == 1)
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;                    dir1 = 2;
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;                break;
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;        case 3: if (e11 == 0)
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;                    dir1 = 0;
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;                if (e11 == 2)
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;                    dir1 = 2;
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;                break;
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;    }
;PCODE: $00000348 VOL: 0
;
;    switch (e22)
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;    {
;        case 0: if (e21 == 1)
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;                    dir2 = 0;
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;                if (e21 == 3)
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;                    dir2 = 2;
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;                break;
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;        case 1: if (e21 == 2)
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;                    dir2 = 0;
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;                if (e21 == 0)
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;                    dir2 = 2;
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;                break;
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;        case 2: if (e21 == 3)
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;                    dir2 = 0;
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;                if (e21 == 1)
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;                    dir2 = 2;
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;                break;
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;        case 3: if (e21 == 0)
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;                    dir2 = 0;
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;                if (e21 == 2)
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;                    dir2 = 2;
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;                break;
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;    }
;PCODE: $0000038A VOL: 0
;
;    e12 = e11;
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;    e22 = e21;
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;}
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;
;#define max_speed 40000
;#define min_speed   500
;#define dividor_speed 500
;
;//3,4,5
;#define port_sh PORTD
;#define pin_sh  0x08
;#define pin_st  0x10
;#define pin_d   0x20
;
;#define pin_pwm 0x40
;
;#define PWM_step 0xFF
;
;#define scan_speed1 7000
;#define scan_speed2 7000
;
;unsigned char pwm_cnt = 0;
;
;unsigned char scan_mode = 1, last_mode = 0;

	.DSEG
;bit edit_mode = 0;
;unsigned char scan_cnt = 0;
;bit chorus = 0;
;bit multiplexor = 0;
;bit ch_speed = 0;
;bit ch_on = 1;
;unsigned int scan_speed = 7000, tmp_speed = 0;
;unsigned char out = 0, out2 = 0;
;
;unsigned char e_preset = 0, e_item = 0, e_out = 0, e_mode = 0;
;bit e_save = 0;
;bit e_preview = 0;
;t_pattern e_patt;
;
;t_pattern patt;
;
;void shift_out(unsigned char data)
; 0000 0083 {

	.CSEG
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0000 0084 	ClrBit(port_sh, pin_st);
;	data -> Y+0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
; 0000 0085     ClrBit(port_sh, pin_sh);
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
; 0000 0086 
; 0000 0087     delay_us(1000);
;PCODE: $00000398 VOL: 0
; 0000 0088 
; 0000 0089 	for(i = 0; i < 8; i++)
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
; 0000 008A 	{
; 0000 008B 		if(data & 0x80)
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 008C 			SetBit(port_sh, pin_d);
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
; 0000 008D 		else
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
; 0000 008E 			ClrBit(port_sh, pin_d);
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 008F 
; 0000 0090 		delay_us(1000);
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
; 0000 0091 		SetBit(port_sh, pin_sh);
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 0092 
; 0000 0093 		delay_us(1000);
;PCODE: $000003AD VOL: 0
; 0000 0094 		ClrBit(port_sh, pin_sh);
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
; 0000 0095 		data <<= 1;
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 0096 	}
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
; 0000 0097     delay_us(1000);
;PCODE: $000003B7 VOL: 0
; 0000 0098     SetBit(port_sh, pin_st);
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
; 0000 0099 }
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;
;
;void lcd_out()
; 0000 009D {
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
; 0000 009E     lcd_clear();
;PCODE: $000003BF VOL: 0
; 0000 009F 
; 0000 00A0     if (!edit_mode)
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
; 0000 00A1     {
; 0000 00A2         lcd_puts("Mode");
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
; 0000 00A3         lcd_gotoxy(11, 0);
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 00A4         lcd_puts("Speed");
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 00A5 
; 0000 00A6         if (scan_mode < 4)
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
; 0000 00A7         {
; 0000 00A8             lcd_gotoxy(0, 1);
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0000 00A9             if (scan_mode > 1)  lcd_putchar(0); else    lcd_putchar(' ');
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
; 0000 00AA             if (chorus) lcd_putchar('C');   else    lcd_putchar('V');
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
; 0000 00AB             LCDWriteInt(scan_mode, 0);
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
; 0000 00AC             if (ch_on)
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
; 0000 00AD             {
; 0000 00AE                 if (scan_mode < 3)  lcd_putchar(1); else    lcd_putchar(' ');
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
; 0000 00AF                 lcd_gotoxy(11, 1);
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 00B0             }
; 0000 00B1             else
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
; 0000 00B2                 lcd_puts("Off");
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
; 0000 00B3         }
;PCODE: $00000410 VOL: 0
; 0000 00B4         else
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
; 0000 00B5         {
; 0000 00B6             lcd_gotoxy(0, 1);
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
; 0000 00B7             lcd_puts(t_preset);
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 00B8             if (current_pattern > 0)  lcd_putchar(0); else    lcd_putchar(' ');
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
; 0000 00B9             if (chorus) lcd_putchar('C');   else    lcd_putchar('V');
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
; 0000 00BA             LCDWriteInt(current_pattern+1, 0);
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
; 0000 00BB             if (current_pattern < MAX_PATTERNS-1)  lcd_putchar(1); else    lcd_putchar(' ');
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
; 0000 00BC             lcd_gotoxy(11, 1);
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
; 0000 00BD         }
;PCODE: $0000044B VOL: 0
; 0000 00BE 
; 0000 00BF         if (scan_speed < max_speed)  lcd_putchar(0); else    lcd_putchar(' ');
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0000 00C0         LCDWriteInt((max_speed - scan_speed)/dividor_speed, 0);
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
; 0000 00C1         if (scan_speed > min_speed)  lcd_putchar(1); else    lcd_putchar(' ');
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
; 0000 00C2     }
;PCODE: $0000046D VOL: 0
; 0000 00C3     else
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
; 0000 00C4     {
; 0000 00C5         lcd_puts("Edit ");
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
; 0000 00C6         lcd_puts(t_preset);
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
; 0000 00C7         if (e_preset > 0 && e_mode==0)  lcd_putchar(0); else    lcd_putchar(' ');
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
; 0000 00C8         LCDWriteInt(e_preset+1, 0);
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
; 0000 00C9         if (e_preset < MAX_PATTERNS-1 && e_mode==0)  lcd_putchar(1); else    lcd_putchar(' ');
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
; 0000 00CA         lcd_putchar(' ');
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
; 0000 00CB         if (e_save) lcd_putchar('*');
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
; 0000 00CC 
; 0000 00CD         lcd_gotoxy(0, 1);
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
; 0000 00CE         lcd_puts(t_item);
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
; 0000 00CF         if (e_item > 0 && e_mode==1)  lcd_putchar(0); else    lcd_putchar(' ');
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
; 0000 00D0         LCDWriteInt(e_item+1, 2);
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
; 0000 00D1         if (e_item < MAX_ITEMS-1 && e_mode==1 && e_out > 0)  lcd_putchar(1); else    lcd_putchar(' ');
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
; 0000 00D2         if (e_out > 0) lcd_putchar(' ');
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
; 0000 00D3 
; 0000 00D4         lcd_puts("Out");
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
; 0000 00D5         if (e_out > 0 && e_mode==2)  lcd_putchar(0); else  lcd_putchar(' ');
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
; 0000 00D6         if (e_out > 0) LCDWriteInt(e_out, 2);   else    lcd_puts("OFF");
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
; 0000 00D7         if (e_out < MAX_OUT && e_mode==2)  lcd_putchar(1); else    lcd_putchar(' ');
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
; 0000 00D8     }
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
; 0000 00D9 }
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0

	.DSEG
_0x82:
	.BYTE 0x1D
;
;#include "keys.c"
;//ñòðåëêè
;flash unsigned char arrow_left[8] =  {0x00, 0x00, 0x02, 0x06, 0x0E, 0x06, 0x02, 0x00};
;flash unsigned char arrow_right[8] = {0x00, 0x00, 0x08, 0x0C, 0x0E, 0x0C, 0x08, 0x00};
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 00DB {

	.CSEG
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;// Place your code here
;    if (ch_speed)
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;        return;
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;//---------------------Rotate left---------------------------
;    if (!TestBit(PINA, 0b01000000))
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
;    {
;        if (!edit_mode)
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;        {
;            if (enc1 && scan_mode > 1 && scan_mode < 4)
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
;                scan_mode--;
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
;PCODE: $00000547 VOL: 0
;            if (!enc1 && scan_mode < 3)
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;                scan_mode++;
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;
;            if (!enc1 && scan_mode == 4 && current_pattern > 0)
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;            {
;                current_pattern--;
;PCODE: $00000564 VOL: 0
;                patt = read_pattern(current_pattern);
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
;            }
;            if (enc1 && scan_mode == 4 && current_pattern < MAX_PATTERNS-1)
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;            {
;                current_pattern++;
;PCODE: $00000578 VOL: 0
;                patt = read_pattern(current_pattern);
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;            }
;        }
;PCODE: $0000057E VOL: 0
;        else
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;        {
;            if (!enc1)
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;            {
;                switch (e_mode)
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;                {
;                    case 0: if (e_preset > 0 && !e_save)
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;                            {
;                                e_preset--;
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;                                e_patt = read_pattern(e_preset);
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;
;                                e_item = 0;
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
;                                e_out = (e_patt.out[e_item] & 0x07) + (e_patt.out[e_item] & 0x08);
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;                                if (e_out)  e_out++;
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;                            }
;PCODE: $000005B0 VOL: 0
;                            break;
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;                    case 1: if (e_item > 0)
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
;                            {
;                                if (e_out)
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
;                                {
;                                    e_out--;
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
;                                    e_patt.out[e_item] = e_out & 0x07;
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;                                    if (e_out > 7)
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
;                                        e_patt.out[e_item] += 0x08;
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
;                                    else
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
;                                        e_patt.out[e_item] += 0x10;
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
;                                }
;PCODE: $000005DC VOL: 0
;                                else
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;                                    e_patt.out[e_item] = 0;
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
;                                e_item--;
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;                                e_out = (e_patt.out[e_item] & 0x07) + (e_patt.out[e_item] & 0x08);
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;                                if (e_out)  e_out++;
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
;                            }
;PCODE: $000005FD VOL: 0
;                            break;
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
;                    case 2: if (e_out > 0 && e_item + 1 == e_patt.length)
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
;                            {
;                                e_out--;
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
;                                e_save = 1;
;PCODE: $00000615 VOL: 0
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;                            }
;                            break;
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
;                }
;PCODE: $0000061A VOL: 0
;                if (!e_out)
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;                {
;                    e_patt.length = e_item;
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;                }
;            }
;PCODE: $00000620 VOL: 0
;            else
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;            {
;                switch (e_mode)
;PCODE: $00000623 VOL: 0
;PCODE: $00000624 VOL: 0
;                {
;                    case 0: if (e_preset < MAX_PATTERNS-1 && !e_save)
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;                            {
;                                e_preset++;
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;                                e_patt = read_pattern(e_preset);
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;
;                                e_item = 0;
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;                                e_out = (e_patt.out[e_item] & 0x07) + (e_patt.out[e_item] & 0x08);
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;                                if (e_out)  e_out++;
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
;                            }
;PCODE: $0000064F VOL: 0
;                            break;
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
;                    case 1: if (e_item < MAX_ITEMS-1 && e_out > 0)
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;                            {
;                                if (e_out)
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
;                                {
;                                    e_out--;
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
;PCODE: $00000664 VOL: 0
;                                    e_patt.out[e_item] = e_out & 0x07;
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;                                    if (e_out > 7)
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
;                                        e_patt.out[e_item] += 0x08;
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
;PCODE: $00000677 VOL: 0
;                                    else
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;                                        e_patt.out[e_item] += 0x10;
;PCODE: $0000067A VOL: 0
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
;                                }
;PCODE: $00000682 VOL: 0
;                                else
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;                                    e_patt.out[e_item] = 0;
;PCODE: $00000685 VOL: 0
;PCODE: $00000686 VOL: 0
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;                                e_item++;
;PCODE: $0000068C VOL: 0
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;                                e_out = (e_patt.out[e_item] & 0x07) + (e_patt.out[e_item] & 0x08);
;PCODE: $00000690 VOL: 0
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
;PCODE: $00000694 VOL: 0
;PCODE: $00000695 VOL: 0
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
;PCODE: $0000069C VOL: 0
;                                if (e_out) e_out++;
;PCODE: $0000069D VOL: 0
;PCODE: $0000069E VOL: 0
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
;                                if (e_item > e_patt.length)
;PCODE: $000006A3 VOL: 0
;PCODE: $000006A4 VOL: 0
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
;PCODE: $000006A7 VOL: 0
;                                    e_patt.length++;
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
;PCODE: $000006AA VOL: 0
;                            }
;PCODE: $000006AB VOL: 0
;                            break;
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
;                    case 2: if (e_out < MAX_OUT)
;PCODE: $000006AE VOL: 0
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
;                            {
;                                e_out++;
;PCODE: $000006B4 VOL: 0
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;                                e_save = 1;
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
;PCODE: $000006B9 VOL: 0
;                            }
;                            break;
;PCODE: $000006BA VOL: 0
;PCODE: $000006BB VOL: 0
;                }
;PCODE: $000006BC VOL: 0
;            }
;PCODE: $000006BD VOL: 0
;        }
;PCODE: $000006BE VOL: 0
;        SetBit(PORTA, 0b01000000);
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
;//        return;
;    }
;//---------------------Rotate right--------------------------
;    if (!TestBit(PINA, 0b10000000))
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;    {
;        if (!edit_mode)
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
;        {
;            if (enc2 && scan_speed < max_speed)
;PCODE: $000006C8 VOL: 0
;PCODE: $000006C9 VOL: 0
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
;                scan_speed += dividor_speed;
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
;PCODE: $000006D4 VOL: 0
;            if (!enc2 && scan_speed > min_speed)
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
;PCODE: $000006D8 VOL: 0
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
;PCODE: $000006DB VOL: 0
;PCODE: $000006DC VOL: 0
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;                scan_speed -= dividor_speed;
;PCODE: $000006E0 VOL: 0
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;            OCR1A = scan_speed;
;PCODE: $000006E3 VOL: 0
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
;        }
;        else
;PCODE: $000006E6 VOL: 0
;PCODE: $000006E7 VOL: 0
;        {
;            if (!enc2)
;PCODE: $000006E8 VOL: 0
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
;            {
;                if (e_mode > 0) e_mode--;
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
;PCODE: $000006F0 VOL: 0
;                else e_mode = 2;
;PCODE: $000006F1 VOL: 0
;PCODE: $000006F2 VOL: 0
;PCODE: $000006F3 VOL: 0
;PCODE: $000006F4 VOL: 0
;            }
;PCODE: $000006F5 VOL: 0
;            else
;PCODE: $000006F6 VOL: 0
;PCODE: $000006F7 VOL: 0
;            {
;                if (e_mode < 2) e_mode++;
;PCODE: $000006F8 VOL: 0
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
;PCODE: $000006FC VOL: 0
;PCODE: $000006FD VOL: 0
;                else e_mode = 0;
;PCODE: $000006FE VOL: 0
;PCODE: $000006FF VOL: 0
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
;            }
;PCODE: $00000702 VOL: 0
;PCODE: $00000703 VOL: 0
;        }
;PCODE: $00000704 VOL: 0
;        SetBit(PORTA, 0b10000000);
;PCODE: $00000705 VOL: 0
;PCODE: $00000706 VOL: 0
;//        return;
;    }
;//------------------------Stop start-------------------------
;//    if (!TestBit(PINA, 0b00010000))
;//    {
;//        if (!edit_mode)
;//        {
;//            if (ch_on)
;//            {
;//                ch_on = 0;
;//                ch_speed = 1;
;//                tmp_speed = scan_speed;
;//            }
;//            else
;//            {
;//                ch_on = 1;
;//                ch_speed = 1;
;//                TCCR1B=0x09;
;//            }
;//        }
;////        return;
;//    }
;
;//---------------------User presets--------------------------
;    if (!TestBit(PINB, 0b00000001) && TestBit(PINA, 0b00010000))
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
;PCODE: $00000709 VOL: 0
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
;PCODE: $0000070C VOL: 0
;PCODE: $0000070D VOL: 0
;PCODE: $0000070E VOL: 0
;PCODE: $0000070F VOL: 0
;PCODE: $00000710 VOL: 0
;PCODE: $00000711 VOL: 0
;    {
;        if (!edit_mode)
;PCODE: $00000712 VOL: 0
;PCODE: $00000713 VOL: 0
;PCODE: $00000714 VOL: 0
;        {
;            if (scan_mode == 4)
;PCODE: $00000715 VOL: 0
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;                scan_mode = last_mode;
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
;            else
;PCODE: $0000071A VOL: 0
;PCODE: $0000071B VOL: 0
;            {
;                last_mode = scan_mode;
;PCODE: $0000071C VOL: 0
;PCODE: $0000071D VOL: 0
;                scan_mode = 4;
;PCODE: $0000071E VOL: 0
;PCODE: $0000071F VOL: 0
;            }
;PCODE: $00000720 VOL: 0
;        }
;//        return;
;    }
;PCODE: $00000721 VOL: 0
;//--------------------Edit mode------------------------------
;    if (!TestBit(PINB, 0b00000001) && !TestBit(PINA, 0b00010000))
;PCODE: $00000722 VOL: 0
;PCODE: $00000723 VOL: 0
;PCODE: $00000724 VOL: 0
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
;PCODE: $00000729 VOL: 0
;PCODE: $0000072A VOL: 0
;PCODE: $0000072B VOL: 0
;PCODE: $0000072C VOL: 0
;    {
;        if (edit_mode)
;PCODE: $0000072D VOL: 0
;PCODE: $0000072E VOL: 0
;PCODE: $0000072F VOL: 0
;        {
;            e_preview = 0;
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
;            edit_mode = 0;
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
;PCODE: $00000735 VOL: 0
;        }
;        else
;PCODE: $00000736 VOL: 0
;PCODE: $00000737 VOL: 0
;            edit_mode = 1;
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
;PCODE: $0000073A VOL: 0
;//        return;
;    }
;PCODE: $0000073B VOL: 0
;//-----------------------Preview-----------------------------
;    if (!TestBit(PINA, 0b00100000))
;PCODE: $0000073C VOL: 0
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;PCODE: $0000073F VOL: 0
;    {
;        if (!edit_mode)
;PCODE: $00000740 VOL: 0
;PCODE: $00000741 VOL: 0
;PCODE: $00000742 VOL: 0
;        {
;            if (ch_on)
;PCODE: $00000743 VOL: 0
;PCODE: $00000744 VOL: 0
;PCODE: $00000745 VOL: 0
;            {
;                ch_on = 0;
;PCODE: $00000746 VOL: 0
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
;                ch_speed = 1;
;PCODE: $00000749 VOL: 0
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
;                tmp_speed = scan_speed;
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
;            }
;            else
;PCODE: $0000074E VOL: 0
;PCODE: $0000074F VOL: 0
;            {
;                ch_on = 1;
;PCODE: $00000750 VOL: 0
;PCODE: $00000751 VOL: 0
;PCODE: $00000752 VOL: 0
;                ch_speed = 1;
;PCODE: $00000753 VOL: 0
;PCODE: $00000754 VOL: 0
;PCODE: $00000755 VOL: 0
;                TCCR1B=0x09;
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
;            }
;PCODE: $00000758 VOL: 0
;        }
;        else
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
;        {
;            if (e_preview)
;PCODE: $0000075B VOL: 0
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
;                e_preview = 0;
;PCODE: $0000075E VOL: 0
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
;            else
;PCODE: $00000761 VOL: 0
;PCODE: $00000762 VOL: 0
;                e_preview = 1;
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
;PCODE: $00000765 VOL: 0
;        }
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
;//        return;
;    }
;//-------------------------Save------------------------------
;    if (!TestBit(PINB, 0b00000010) && e_save && edit_mode)
;PCODE: $00000768 VOL: 0
;PCODE: $00000769 VOL: 0
;PCODE: $0000076A VOL: 0
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
;PCODE: $0000076D VOL: 0
;PCODE: $0000076E VOL: 0
;PCODE: $0000076F VOL: 0
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
;PCODE: $00000772 VOL: 0
;PCODE: $00000773 VOL: 0
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;    {
;        //ñîõðàíÿåì òåêóùèé OUT, ò.ê. îí ñîêðàíÿåòñÿ òîëüêî ïðè èçìåíåíèè ITEM
;        if (e_out)
;PCODE: $00000776 VOL: 0
;PCODE: $00000777 VOL: 0
;PCODE: $00000778 VOL: 0
;        {
;            e_out--;
;PCODE: $00000779 VOL: 0
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;            e_patt.out[e_item] = e_out & 0x07;
;PCODE: $0000077C VOL: 0
;PCODE: $0000077D VOL: 0
;PCODE: $0000077E VOL: 0
;PCODE: $0000077F VOL: 0
;PCODE: $00000780 VOL: 0
;PCODE: $00000781 VOL: 0
;PCODE: $00000782 VOL: 0
;PCODE: $00000783 VOL: 0
;            if (e_out > 7)
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
;PCODE: $00000786 VOL: 0
;                e_patt.out[e_item] += 0x08;
;PCODE: $00000787 VOL: 0
;PCODE: $00000788 VOL: 0
;PCODE: $00000789 VOL: 0
;PCODE: $0000078A VOL: 0
;PCODE: $0000078B VOL: 0
;PCODE: $0000078C VOL: 0
;PCODE: $0000078D VOL: 0
;PCODE: $0000078E VOL: 0
;            else
;PCODE: $0000078F VOL: 0
;PCODE: $00000790 VOL: 0
;            e_patt.out[e_item] += 0x10;
;PCODE: $00000791 VOL: 0
;PCODE: $00000792 VOL: 0
;PCODE: $00000793 VOL: 0
;PCODE: $00000794 VOL: 0
;PCODE: $00000795 VOL: 0
;PCODE: $00000796 VOL: 0
;PCODE: $00000797 VOL: 0
;PCODE: $00000798 VOL: 0
;        }
;PCODE: $00000799 VOL: 0
;        else
;PCODE: $0000079A VOL: 0
;PCODE: $0000079B VOL: 0
;            e_patt.out[e_item] = 0;
;PCODE: $0000079C VOL: 0
;PCODE: $0000079D VOL: 0
;PCODE: $0000079E VOL: 0
;PCODE: $0000079F VOL: 0
;PCODE: $000007A0 VOL: 0
;PCODE: $000007A1 VOL: 0
;PCODE: $000007A2 VOL: 0
;        //çàïèñü â EEPROM
;        write_pattern(e_patt, e_preset);
;PCODE: $000007A3 VOL: 0
;PCODE: $000007A4 VOL: 0
;PCODE: $000007A5 VOL: 0
;PCODE: $000007A6 VOL: 0
;PCODE: $000007A7 VOL: 0
;PCODE: $000007A8 VOL: 0
;        e_save = 0;
;PCODE: $000007A9 VOL: 0
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
;//        return;
;    }
;
;    lcd_out();
;PCODE: $000007AC VOL: 0
;PCODE: $000007AD VOL: 0
;}
;PCODE: $000007AE VOL: 0
;PCODE: $000007AF VOL: 0
;PCODE: $000007B0 VOL: 0
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 00DF {
;PCODE: $000007B1 VOL: 0
;PCODE: $000007B2 VOL: 0
; 0000 00E0 // Place your code here
; 0000 00E1     encoder_main(PINA, 0b00000001, 0b00000010, PINA, 0b00000100, 0b00001000);
;PCODE: $000007B3 VOL: 0
;PCODE: $000007B4 VOL: 0
;PCODE: $000007B5 VOL: 0
;PCODE: $000007B6 VOL: 0
;PCODE: $000007B7 VOL: 0
;PCODE: $000007B8 VOL: 0
;PCODE: $000007B9 VOL: 0
;PCODE: $000007BA VOL: 0
;PCODE: $000007BB VOL: 0
;PCODE: $000007BC VOL: 0
;PCODE: $000007BD VOL: 0
;PCODE: $000007BE VOL: 0
;PCODE: $000007BF VOL: 0
; 0000 00E2 }
;PCODE: $000007C0 VOL: 0
;PCODE: $000007C1 VOL: 0
;PCODE: $000007C2 VOL: 0
;
;// Timer1 output compare A interrupt service routine
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 00E6 {
;PCODE: $000007C3 VOL: 0
;PCODE: $000007C4 VOL: 0
; 0000 00E7 // Place your code here
; 0000 00E8     if (multiplexor)
;PCODE: $000007C5 VOL: 0
;PCODE: $000007C6 VOL: 0
;PCODE: $000007C7 VOL: 0
; 0000 00E9         pwm_cnt--;
;PCODE: $000007C8 VOL: 0
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
; 0000 00EA     else
;PCODE: $000007CB VOL: 0
;PCODE: $000007CC VOL: 0
; 0000 00EB         pwm_cnt++;
;PCODE: $000007CD VOL: 0
;PCODE: $000007CE VOL: 0
;PCODE: $000007CF VOL: 0
; 0000 00EC 
; 0000 00ED     OCR2 = pwm_cnt;
;PCODE: $000007D0 VOL: 0
;PCODE: $000007D1 VOL: 0
;PCODE: $000007D2 VOL: 0
; 0000 00EE 
; 0000 00EF     if (pwm_cnt > 0 && pwm_cnt < 0xFF)
;PCODE: $000007D3 VOL: 0
;PCODE: $000007D4 VOL: 0
;PCODE: $000007D5 VOL: 0
;PCODE: $000007D6 VOL: 0
;PCODE: $000007D7 VOL: 0
;PCODE: $000007D8 VOL: 0
;PCODE: $000007D9 VOL: 0
;PCODE: $000007DA VOL: 0
;PCODE: $000007DB VOL: 0
;PCODE: $000007DC VOL: 0
; 0000 00F0         return;
;PCODE: $000007DD VOL: 0
;PCODE: $000007DE VOL: 0
; 0000 00F1 
; 0000 00F2     if (!edit_mode)
;PCODE: $000007DF VOL: 0
;PCODE: $000007E0 VOL: 0
;PCODE: $000007E1 VOL: 0
;PCODE: $000007E2 VOL: 0
; 0000 00F3     {
; 0000 00F4     if (ch_speed)
;PCODE: $000007E3 VOL: 0
;PCODE: $000007E4 VOL: 0
;PCODE: $000007E5 VOL: 0
; 0000 00F5     {
; 0000 00F6         if (!ch_on)
;PCODE: $000007E6 VOL: 0
;PCODE: $000007E7 VOL: 0
;PCODE: $000007E8 VOL: 0
; 0000 00F7             if (scan_speed <= max_speed)    scan_speed += dividor_speed;
;PCODE: $000007E9 VOL: 0
;PCODE: $000007EA VOL: 0
;PCODE: $000007EB VOL: 0
;PCODE: $000007EC VOL: 0
;PCODE: $000007ED VOL: 0
;PCODE: $000007EE VOL: 0
; 0000 00F8             else
;PCODE: $000007EF VOL: 0
;PCODE: $000007F0 VOL: 0
; 0000 00F9             {
; 0000 00FA                 out = 0xFF;
;PCODE: $000007F1 VOL: 0
;PCODE: $000007F2 VOL: 0
; 0000 00FB                 shift_out(out);
;PCODE: $000007F3 VOL: 0
;PCODE: $000007F4 VOL: 0
;PCODE: $000007F5 VOL: 0
; 0000 00FC                 TCCR1B=0x00;
;PCODE: $000007F6 VOL: 0
;PCODE: $000007F7 VOL: 0
; 0000 00FD                 ch_speed = 0;
;PCODE: $000007F8 VOL: 0
;PCODE: $000007F9 VOL: 0
;PCODE: $000007FA VOL: 0
; 0000 00FE                 return;
;PCODE: $000007FB VOL: 0
;PCODE: $000007FC VOL: 0
; 0000 00FF             }
;PCODE: $000007FD VOL: 0
; 0000 0100         if (ch_on)
;PCODE: $000007FE VOL: 0
;PCODE: $000007FF VOL: 0
;PCODE: $00000800 VOL: 0
;PCODE: $00000801 VOL: 0
; 0000 0101             if (scan_speed >= tmp_speed)    scan_speed -= dividor_speed;
;PCODE: $00000802 VOL: 0
;PCODE: $00000803 VOL: 0
;PCODE: $00000804 VOL: 0
;PCODE: $00000805 VOL: 0
;PCODE: $00000806 VOL: 0
;PCODE: $00000807 VOL: 0
;PCODE: $00000808 VOL: 0
; 0000 0102             else
;PCODE: $00000809 VOL: 0
;PCODE: $0000080A VOL: 0
; 0000 0103             {
; 0000 0104                 scan_speed = tmp_speed;
;PCODE: $0000080B VOL: 0
;PCODE: $0000080C VOL: 0
; 0000 0105                 ch_speed = 0;
;PCODE: $0000080D VOL: 0
;PCODE: $0000080E VOL: 0
;PCODE: $0000080F VOL: 0
; 0000 0106 //                out = 0x10;
; 0000 0107             }
;PCODE: $00000810 VOL: 0
; 0000 0108     }
;PCODE: $00000811 VOL: 0
; 0000 0109     switch (scan_mode)
;PCODE: $00000812 VOL: 0
;PCODE: $00000813 VOL: 0
;PCODE: $00000814 VOL: 0
; 0000 010A     {
; 0000 010B         case 1:
;PCODE: $00000815 VOL: 0
;PCODE: $00000816 VOL: 0
; 0000 010C             out = v1.out[scan_cnt];
;PCODE: $00000817 VOL: 0
;PCODE: $00000818 VOL: 0
;PCODE: $00000819 VOL: 0
;PCODE: $0000081A VOL: 0
;PCODE: $0000081B VOL: 0
;PCODE: $0000081C VOL: 0
;PCODE: $0000081D VOL: 0
;PCODE: $0000081E VOL: 0
; 0000 010D             scan_cnt++;
;PCODE: $0000081F VOL: 0
;PCODE: $00000820 VOL: 0
;PCODE: $00000821 VOL: 0
; 0000 010E             if (scan_cnt >= v1.length)
;PCODE: $00000822 VOL: 0
;PCODE: $00000823 VOL: 0
;PCODE: $00000824 VOL: 0
;PCODE: $00000825 VOL: 0
;PCODE: $00000826 VOL: 0
; 0000 010F                 scan_cnt = 0;
;PCODE: $00000827 VOL: 0
;PCODE: $00000828 VOL: 0
; 0000 0110             break;
;PCODE: $00000829 VOL: 0
;PCODE: $0000082A VOL: 0
; 0000 0111         case 2:
;PCODE: $0000082B VOL: 0
;PCODE: $0000082C VOL: 0
;PCODE: $0000082D VOL: 0
; 0000 0112             out = v2.out[scan_cnt];
;PCODE: $0000082E VOL: 0
;PCODE: $0000082F VOL: 0
;PCODE: $00000830 VOL: 0
;PCODE: $00000831 VOL: 0
;PCODE: $00000832 VOL: 0
;PCODE: $00000833 VOL: 0
;PCODE: $00000834 VOL: 0
;PCODE: $00000835 VOL: 0
; 0000 0113             scan_cnt++;
;PCODE: $00000836 VOL: 0
;PCODE: $00000837 VOL: 0
;PCODE: $00000838 VOL: 0
; 0000 0114             if (scan_cnt >= v2.length)
;PCODE: $00000839 VOL: 0
;PCODE: $0000083A VOL: 0
;PCODE: $0000083B VOL: 0
;PCODE: $0000083C VOL: 0
;PCODE: $0000083D VOL: 0
; 0000 0115                 scan_cnt = 0;
;PCODE: $0000083E VOL: 0
;PCODE: $0000083F VOL: 0
; 0000 0116             break;
;PCODE: $00000840 VOL: 0
;PCODE: $00000841 VOL: 0
; 0000 0117         case 3:
;PCODE: $00000842 VOL: 0
;PCODE: $00000843 VOL: 0
;PCODE: $00000844 VOL: 0
; 0000 0118             out = v3.out[scan_cnt];
;PCODE: $00000845 VOL: 0
;PCODE: $00000846 VOL: 0
;PCODE: $00000847 VOL: 0
;PCODE: $00000848 VOL: 0
;PCODE: $00000849 VOL: 0
;PCODE: $0000084A VOL: 0
;PCODE: $0000084B VOL: 0
;PCODE: $0000084C VOL: 0
; 0000 0119             scan_cnt++;
;PCODE: $0000084D VOL: 0
;PCODE: $0000084E VOL: 0
;PCODE: $0000084F VOL: 0
; 0000 011A             if (scan_cnt >= v3.length)
;PCODE: $00000850 VOL: 0
;PCODE: $00000851 VOL: 0
;PCODE: $00000852 VOL: 0
;PCODE: $00000853 VOL: 0
;PCODE: $00000854 VOL: 0
; 0000 011B                 scan_cnt = 0;
;PCODE: $00000855 VOL: 0
;PCODE: $00000856 VOL: 0
; 0000 011C             break;
;PCODE: $00000857 VOL: 0
;PCODE: $00000858 VOL: 0
; 0000 011D         case 4:
;PCODE: $00000859 VOL: 0
;PCODE: $0000085A VOL: 0
;PCODE: $0000085B VOL: 0
; 0000 011E             out = patt.out[scan_cnt];
;PCODE: $0000085C VOL: 0
;PCODE: $0000085D VOL: 0
;PCODE: $0000085E VOL: 0
;PCODE: $0000085F VOL: 0
;PCODE: $00000860 VOL: 0
;PCODE: $00000861 VOL: 0
;PCODE: $00000862 VOL: 0
; 0000 011F             scan_cnt++;
;PCODE: $00000863 VOL: 0
;PCODE: $00000864 VOL: 0
;PCODE: $00000865 VOL: 0
; 0000 0120             if (scan_cnt >= patt.length)
;PCODE: $00000866 VOL: 0
;PCODE: $00000867 VOL: 0
;PCODE: $00000868 VOL: 0
;PCODE: $00000869 VOL: 0
; 0000 0121                 scan_cnt = 0;
;PCODE: $0000086A VOL: 0
;PCODE: $0000086B VOL: 0
; 0000 0122             break;
;PCODE: $0000086C VOL: 0
;PCODE: $0000086D VOL: 0
; 0000 0123     }
;PCODE: $0000086E VOL: 0
; 0000 0124     }
; 0000 0125     else
;PCODE: $0000086F VOL: 0
;PCODE: $00000870 VOL: 0
; 0000 0126     if (e_preview)
;PCODE: $00000871 VOL: 0
;PCODE: $00000872 VOL: 0
;PCODE: $00000873 VOL: 0
; 0000 0127     {
; 0000 0128         out = e_patt.out[scan_cnt];
;PCODE: $00000874 VOL: 0
;PCODE: $00000875 VOL: 0
;PCODE: $00000876 VOL: 0
;PCODE: $00000877 VOL: 0
;PCODE: $00000878 VOL: 0
;PCODE: $00000879 VOL: 0
;PCODE: $0000087A VOL: 0
; 0000 0129         scan_cnt++;
;PCODE: $0000087B VOL: 0
;PCODE: $0000087C VOL: 0
;PCODE: $0000087D VOL: 0
; 0000 012A         if (scan_cnt >= e_patt.length)
;PCODE: $0000087E VOL: 0
;PCODE: $0000087F VOL: 0
;PCODE: $00000880 VOL: 0
;PCODE: $00000881 VOL: 0
; 0000 012B             scan_cnt = 0;
;PCODE: $00000882 VOL: 0
;PCODE: $00000883 VOL: 0
; 0000 012C     }
;PCODE: $00000884 VOL: 0
; 0000 012D     else
;PCODE: $00000885 VOL: 0
;PCODE: $00000886 VOL: 0
; 0000 012E         out = 0x10;
;PCODE: $00000887 VOL: 0
;PCODE: $00000888 VOL: 0
; 0000 012F 
; 0000 0130     out  = out  & 0x0F;
;PCODE: $00000889 VOL: 0
;PCODE: $0000088A VOL: 0
;PCODE: $0000088B VOL: 0
;PCODE: $0000088C VOL: 0
;PCODE: $0000088D VOL: 0
; 0000 0131 //    out2 = out2 & 0x0F;
; 0000 0132 
; 0000 0133     PORTB = 0b00000011 + (out << 4);
;PCODE: $0000088E VOL: 0
;PCODE: $0000088F VOL: 0
;PCODE: $00000890 VOL: 0
;PCODE: $00000891 VOL: 0
; 0000 0134     if (multiplexor)
;PCODE: $00000892 VOL: 0
;PCODE: $00000893 VOL: 0
;PCODE: $00000894 VOL: 0
; 0000 0135     {
; 0000 0136         shift_out((out << 4) + out2);
;PCODE: $00000895 VOL: 0
;PCODE: $00000896 VOL: 0
;PCODE: $00000897 VOL: 0
;PCODE: $00000898 VOL: 0
;PCODE: $00000899 VOL: 0
;PCODE: $0000089A VOL: 0
; 0000 0137         multiplexor = 0;
;PCODE: $0000089B VOL: 0
;PCODE: $0000089C VOL: 0
;PCODE: $0000089D VOL: 0
; 0000 0138     }
; 0000 0139     else
;PCODE: $0000089E VOL: 0
;PCODE: $0000089F VOL: 0
; 0000 013A     {
; 0000 013B         shift_out((out2 << 4) + out);
;PCODE: $000008A0 VOL: 0
;PCODE: $000008A1 VOL: 0
;PCODE: $000008A2 VOL: 0
;PCODE: $000008A3 VOL: 0
;PCODE: $000008A4 VOL: 0
;PCODE: $000008A5 VOL: 0
; 0000 013C         multiplexor = 1;
;PCODE: $000008A6 VOL: 0
;PCODE: $000008A7 VOL: 0
;PCODE: $000008A8 VOL: 0
; 0000 013D     }
;PCODE: $000008A9 VOL: 0
; 0000 013E //    PORTD = out << 3;
; 0000 013F     out2 = out;
;PCODE: $000008AA VOL: 0
;PCODE: $000008AB VOL: 0
; 0000 0140 
; 0000 0141     TCNT1 = 0;
;PCODE: $000008AC VOL: 0
;PCODE: $000008AD VOL: 0
; 0000 0142 }
;PCODE: $000008AE VOL: 0
;PCODE: $000008AF VOL: 0
;PCODE: $000008B0 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0147 {
;PCODE: $000008B1 VOL: 0
; 0000 0148 // Declare your local variables here
; 0000 0149 unsigned char i = 0;
; 0000 014A 
; 0000 014B // Declare your local variables here
; 0000 014C 
; 0000 014D // Input/Output Ports initialization
; 0000 014E // Port A initialization
; 0000 014F // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0150 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0151 PORTA=0xC0;
;	i -> R17
;PCODE: $000008B2 VOL: 0
;PCODE: $000008B3 VOL: 0
;PCODE: $000008B4 VOL: 0
;PCODE: $000008B5 VOL: 0
; 0000 0152 DDRA=0xC0;
;PCODE: $000008B6 VOL: 0
;PCODE: $000008B7 VOL: 0
; 0000 0153 
; 0000 0154 // Port B initialization
; 0000 0155 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0156 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0157 PORTB=0x03;
;PCODE: $000008B8 VOL: 0
;PCODE: $000008B9 VOL: 0
; 0000 0158 DDRB=0xF0;
;PCODE: $000008BA VOL: 0
;PCODE: $000008BB VOL: 0
; 0000 0159 
; 0000 015A // Port C initialization
; 0000 015B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 015C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 015D PORTC=0x00;
;PCODE: $000008BC VOL: 0
;PCODE: $000008BD VOL: 0
; 0000 015E DDRC=0x00;
;PCODE: $000008BE VOL: 0
;PCODE: $000008BF VOL: 0
; 0000 015F 
; 0000 0160 // Port D initialization
; 0000 0161 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0162 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0163 PORTD=0x07;
;PCODE: $000008C0 VOL: 0
;PCODE: $000008C1 VOL: 0
; 0000 0164 DDRD=0xFB;
;PCODE: $000008C2 VOL: 0
;PCODE: $000008C3 VOL: 0
; 0000 0165 
; 0000 0166 // Timer/Counter 0 initialization
; 0000 0167 // Clock source: System Clock
; 0000 0168 // Clock value: 187,500 kHz
; 0000 0169 // Mode: Normal top=FFh
; 0000 016A // OC0 output: Disconnected
; 0000 016B TCCR0=0x02;
;PCODE: $000008C4 VOL: 0
;PCODE: $000008C5 VOL: 0
; 0000 016C TCNT0=0x00;
;PCODE: $000008C6 VOL: 0
;PCODE: $000008C7 VOL: 0
; 0000 016D OCR0=0x00;
;PCODE: $000008C8 VOL: 0
;PCODE: $000008C9 VOL: 0
; 0000 016E 
; 0000 016F // Timer/Counter 1 initialization
; 0000 0170 // Clock source: System Clock
; 0000 0171 // Clock value: 46,875 kHz
; 0000 0172 // Mode: CTC top=ICR1
; 0000 0173 // OC1A output: Discon.
; 0000 0174 // OC1B output: Discon.
; 0000 0175 // Noise Canceler: Off
; 0000 0176 // Input Capture on Falling Edge
; 0000 0177 // Timer1 Overflow Interrupt: On
; 0000 0178 // Input Capture Interrupt: Off
; 0000 0179 // Compare A Match Interrupt: Off
; 0000 017A // Compare B Match Interrupt: Off
; 0000 017B TCCR1A=0x00;
;PCODE: $000008CA VOL: 0
;PCODE: $000008CB VOL: 0
; 0000 017C TCCR1B=0x09;
;PCODE: $000008CC VOL: 0
;PCODE: $000008CD VOL: 0
; 0000 017D TCNT1H=0x00;
;PCODE: $000008CE VOL: 0
;PCODE: $000008CF VOL: 0
; 0000 017E TCNT1L=0x00;
;PCODE: $000008D0 VOL: 0
;PCODE: $000008D1 VOL: 0
; 0000 017F ICR1H=0x00;
;PCODE: $000008D2 VOL: 0
;PCODE: $000008D3 VOL: 0
; 0000 0180 ICR1L=0x00;
;PCODE: $000008D4 VOL: 0
;PCODE: $000008D5 VOL: 0
; 0000 0181 //OCR1AH=0xFF;
; 0000 0182 //OCR1AL=0xFF;
; 0000 0183 OCR1A = scan_speed;
;PCODE: $000008D6 VOL: 0
;PCODE: $000008D7 VOL: 0
; 0000 0184 OCR1BH=0x00;
;PCODE: $000008D8 VOL: 0
;PCODE: $000008D9 VOL: 0
; 0000 0185 OCR1BL=0x00;
;PCODE: $000008DA VOL: 0
;PCODE: $000008DB VOL: 0
; 0000 0186 
; 0000 0187 // Timer/Counter 2 initialization
; 0000 0188 // Clock source: System Clock
; 0000 0189 // Clock value: 1500,000 kHz
; 0000 018A // Mode: Phase correct PWM top=FFh
; 0000 018B // OC2 output: Non-Inverted PWM
; 0000 018C ASSR=0x00;
;PCODE: $000008DC VOL: 0
;PCODE: $000008DD VOL: 0
; 0000 018D TCCR2=0x61;
;PCODE: $000008DE VOL: 0
;PCODE: $000008DF VOL: 0
; 0000 018E TCNT2=0x00;
;PCODE: $000008E0 VOL: 0
;PCODE: $000008E1 VOL: 0
; 0000 018F OCR2=0xFF;
;PCODE: $000008E2 VOL: 0
;PCODE: $000008E3 VOL: 0
; 0000 0190 
; 0000 0191 // External Interrupt(s) initialization
; 0000 0192 // INT0: On
; 0000 0193 // INT0 Mode: Falling Edge
; 0000 0194 // INT1: Off
; 0000 0195 // INT2: Off
; 0000 0196 GICR|=0x40;
;PCODE: $000008E4 VOL: 0
;PCODE: $000008E5 VOL: 0
;PCODE: $000008E6 VOL: 0
; 0000 0197 MCUCR=0x02;
;PCODE: $000008E7 VOL: 0
;PCODE: $000008E8 VOL: 0
; 0000 0198 MCUCSR=0x00;
;PCODE: $000008E9 VOL: 0
;PCODE: $000008EA VOL: 0
; 0000 0199 GIFR=0x40;
;PCODE: $000008EB VOL: 0
;PCODE: $000008EC VOL: 0
; 0000 019A 
; 0000 019B // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 019C TIMSK=0x11;
;PCODE: $000008ED VOL: 0
;PCODE: $000008EE VOL: 0
; 0000 019D 
; 0000 019E // Analog Comparator initialization
; 0000 019F // Analog Comparator: Off
; 0000 01A0 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 01A1 ACSR=0x80;
;PCODE: $000008EF VOL: 0
;PCODE: $000008F0 VOL: 0
; 0000 01A2 SFIOR=0x00;
;PCODE: $000008F1 VOL: 0
;PCODE: $000008F2 VOL: 0
; 0000 01A3 
; 0000 01A4 // LCD module initialization
; 0000 01A5 lcd_init(16);
;PCODE: $000008F3 VOL: 0
;PCODE: $000008F4 VOL: 0
;PCODE: $000008F5 VOL: 0
; 0000 01A6 
; 0000 01A7 for (i = 0; i < 8; i++)
;PCODE: $000008F6 VOL: 0
;PCODE: $000008F7 VOL: 0
;PCODE: $000008F8 VOL: 0
;PCODE: $000008F9 VOL: 0
;PCODE: $000008FA VOL: 0
;PCODE: $000008FB VOL: 0
;PCODE: $000008FC VOL: 0
;PCODE: $000008FD VOL: 0
;PCODE: $000008FE VOL: 0
; 0000 01A8 {
; 0000 01A9     lcd_write_byte(0x40 + i, arrow_left[i]);
;PCODE: $000008FF VOL: 0
;PCODE: $00000900 VOL: 0
;PCODE: $00000901 VOL: 0
;PCODE: $00000902 VOL: 0
;PCODE: $00000903 VOL: 0
;PCODE: $00000904 VOL: 0
;PCODE: $00000905 VOL: 0
;PCODE: $00000906 VOL: 0
;PCODE: $00000907 VOL: 0
; 0000 01AA }
;PCODE: $00000908 VOL: 0
;PCODE: $00000909 VOL: 0
;PCODE: $0000090A VOL: 0
;PCODE: $0000090B VOL: 0
;PCODE: $0000090C VOL: 0
; 0000 01AB 
; 0000 01AC for (i = 0; i < 8; i++)
;PCODE: $0000090D VOL: 0
;PCODE: $0000090E VOL: 0
;PCODE: $0000090F VOL: 0
;PCODE: $00000910 VOL: 0
;PCODE: $00000911 VOL: 0
;PCODE: $00000912 VOL: 0
;PCODE: $00000913 VOL: 0
;PCODE: $00000914 VOL: 0
;PCODE: $00000915 VOL: 0
; 0000 01AD {
; 0000 01AE     lcd_write_byte(0x40 + 0x08 + i, arrow_right[i]);
;PCODE: $00000916 VOL: 0
;PCODE: $00000917 VOL: 0
;PCODE: $00000918 VOL: 0
;PCODE: $00000919 VOL: 0
;PCODE: $0000091A VOL: 0
;PCODE: $0000091B VOL: 0
;PCODE: $0000091C VOL: 0
;PCODE: $0000091D VOL: 0
;PCODE: $0000091E VOL: 0
; 0000 01AF }
;PCODE: $0000091F VOL: 0
;PCODE: $00000920 VOL: 0
;PCODE: $00000921 VOL: 0
;PCODE: $00000922 VOL: 0
;PCODE: $00000923 VOL: 0
; 0000 01B0 
; 0000 01B1 // I2C Bus initialization
; 0000 01B2 i2c_init();
;PCODE: $00000924 VOL: 0
; 0000 01B3 
; 0000 01B4 lcd_clear();
;PCODE: $00000925 VOL: 0
; 0000 01B5 lcd_puts(" Hammond Organ  ");
;PCODE: $00000926 VOL: 0
;PCODE: $00000927 VOL: 0
;PCODE: $00000928 VOL: 0
;PCODE: $00000929 VOL: 0
; 0000 01B6 delay_ms(1000);
;PCODE: $0000092A VOL: 0
;PCODE: $0000092B VOL: 0
;PCODE: $0000092C VOL: 0
; 0000 01B7 
; 0000 01B8 lcd_gotoxy(0, 1);
;PCODE: $0000092D VOL: 0
;PCODE: $0000092E VOL: 0
;PCODE: $0000092F VOL: 0
;PCODE: $00000930 VOL: 0
;PCODE: $00000931 VOL: 0
; 0000 01B9 lcd_puts(" Vibrato/Chorus ");
;PCODE: $00000932 VOL: 0
;PCODE: $00000933 VOL: 0
;PCODE: $00000934 VOL: 0
;PCODE: $00000935 VOL: 0
; 0000 01BA delay_ms(1000);
;PCODE: $00000936 VOL: 0
;PCODE: $00000937 VOL: 0
;PCODE: $00000938 VOL: 0
; 0000 01BB 
; 0000 01BC lcd_gotoxy(0, 1);
;PCODE: $00000939 VOL: 0
;PCODE: $0000093A VOL: 0
;PCODE: $0000093B VOL: 0
;PCODE: $0000093C VOL: 0
;PCODE: $0000093D VOL: 0
; 0000 01BD lcd_puts("Digital Scanner ");
;PCODE: $0000093E VOL: 0
;PCODE: $0000093F VOL: 0
;PCODE: $00000940 VOL: 0
;PCODE: $00000941 VOL: 0
; 0000 01BE delay_ms(1000);
;PCODE: $00000942 VOL: 0
;PCODE: $00000943 VOL: 0
;PCODE: $00000944 VOL: 0
; 0000 01BF 
; 0000 01C0 lcd_gotoxy(0, 1);
;PCODE: $00000945 VOL: 0
;PCODE: $00000946 VOL: 0
;PCODE: $00000947 VOL: 0
;PCODE: $00000948 VOL: 0
;PCODE: $00000949 VOL: 0
; 0000 01C1 lcd_puts("      by        ");
;PCODE: $0000094A VOL: 0
;PCODE: $0000094B VOL: 0
;PCODE: $0000094C VOL: 0
;PCODE: $0000094D VOL: 0
; 0000 01C2 delay_ms(700);
;PCODE: $0000094E VOL: 0
;PCODE: $0000094F VOL: 0
;PCODE: $00000950 VOL: 0
; 0000 01C3 
; 0000 01C4 lcd_gotoxy(0, 1);
;PCODE: $00000951 VOL: 0
;PCODE: $00000952 VOL: 0
;PCODE: $00000953 VOL: 0
;PCODE: $00000954 VOL: 0
;PCODE: $00000955 VOL: 0
; 0000 01C5 lcd_puts(" Rinon Ninqueon ");
;PCODE: $00000956 VOL: 0
;PCODE: $00000957 VOL: 0
;PCODE: $00000958 VOL: 0
;PCODE: $00000959 VOL: 0
; 0000 01C6 delay_ms(1000);
;PCODE: $0000095A VOL: 0
;PCODE: $0000095B VOL: 0
;PCODE: $0000095C VOL: 0
; 0000 01C7 
; 0000 01C8 delay_ms(100);
;PCODE: $0000095D VOL: 0
;PCODE: $0000095E VOL: 0
;PCODE: $0000095F VOL: 0
; 0000 01C9 
; 0000 01CA if (init_check())
;PCODE: $00000960 VOL: 0
;PCODE: $00000961 VOL: 0
;PCODE: $00000962 VOL: 0
; 0000 01CB     zero_init();
;PCODE: $00000963 VOL: 0
; 0000 01CC 
; 0000 01CD #asm("sei")
;PCODE: $00000964 VOL: 0
;PCODE: $00000965 VOL: 0
	sei
;PCODE: $00000966 VOL: 0
; 0000 01CE 
; 0000 01CF patt = read_pattern(current_pattern);
;PCODE: $00000967 VOL: 0
;PCODE: $00000968 VOL: 0
;PCODE: $00000969 VOL: 0
;PCODE: $0000096A VOL: 0
;PCODE: $0000096B VOL: 0
; 0000 01D0 
; 0000 01D1 lcd_out();
;PCODE: $0000096C VOL: 0
; 0000 01D2 
; 0000 01D3 while (1)
;PCODE: $0000096D VOL: 0
; 0000 01D4     {
; 0000 01D5         if (dir1 != 1)               //îáðàáîòêà ýíêîäåðà 1
;PCODE: $0000096E VOL: 0
;PCODE: $0000096F VOL: 0
;PCODE: $00000970 VOL: 0
; 0000 01D6         {
; 0000 01D7             if (dir1 == 0)
;PCODE: $00000971 VOL: 0
;PCODE: $00000972 VOL: 0
;PCODE: $00000973 VOL: 0
; 0000 01D8             {
; 0000 01D9                 if (dir_cnt1 == 0)
;PCODE: $00000974 VOL: 0
;PCODE: $00000975 VOL: 0
;PCODE: $00000976 VOL: 0
; 0000 01DA                 {
; 0000 01DB                     dir_cnt1 = _dir_cnt;
;PCODE: $00000977 VOL: 0
;PCODE: $00000978 VOL: 0
; 0000 01DC                     ClrBit(PORTA, 0b01000000);
;PCODE: $00000979 VOL: 0
;PCODE: $0000097A VOL: 0
; 0000 01DD                     enc1 = 0;
;PCODE: $0000097B VOL: 0
;PCODE: $0000097C VOL: 0
; 0000 01DE                 }
; 0000 01DF                 dir_cnt1--;
;PCODE: $0000097D VOL: 0
;PCODE: $0000097E VOL: 0
;PCODE: $0000097F VOL: 0
;PCODE: $00000980 VOL: 0
; 0000 01E0             }
; 0000 01E1             else
;PCODE: $00000981 VOL: 0
;PCODE: $00000982 VOL: 0
; 0000 01E2             {
; 0000 01E3                 if (dir_cnt1 == _dir_cnt2)
;PCODE: $00000983 VOL: 0
;PCODE: $00000984 VOL: 0
;PCODE: $00000985 VOL: 0
; 0000 01E4                 {
; 0000 01E5                     dir_cnt1 = _dir_cnt;
;PCODE: $00000986 VOL: 0
;PCODE: $00000987 VOL: 0
; 0000 01E6                     ClrBit(PORTA, 0b01000000);
;PCODE: $00000988 VOL: 0
;PCODE: $00000989 VOL: 0
; 0000 01E7                     enc1 = 1;
;PCODE: $0000098A VOL: 0
;PCODE: $0000098B VOL: 0
; 0000 01E8                 }
; 0000 01E9                 dir_cnt1++;
;PCODE: $0000098C VOL: 0
;PCODE: $0000098D VOL: 0
;PCODE: $0000098E VOL: 0
;PCODE: $0000098F VOL: 0
; 0000 01EA             }
;PCODE: $00000990 VOL: 0
; 0000 01EB 
; 0000 01EC             dir1 = 1;
;PCODE: $00000991 VOL: 0
;PCODE: $00000992 VOL: 0
; 0000 01ED         }
; 0000 01EE 
; 0000 01EF         if (dir2 != 1)               //îáðàáîòêà ýíêîäåðà 2
;PCODE: $00000993 VOL: 0
;PCODE: $00000994 VOL: 0
;PCODE: $00000995 VOL: 0
;PCODE: $00000996 VOL: 0
; 0000 01F0         {
; 0000 01F1             if (dir2 == 0)
;PCODE: $00000997 VOL: 0
;PCODE: $00000998 VOL: 0
;PCODE: $00000999 VOL: 0
; 0000 01F2             {
; 0000 01F3                 if (dir_cnt2 == 0)
;PCODE: $0000099A VOL: 0
;PCODE: $0000099B VOL: 0
;PCODE: $0000099C VOL: 0
; 0000 01F4                 {
; 0000 01F5                     dir_cnt2 = _dir_cnt;
;PCODE: $0000099D VOL: 0
;PCODE: $0000099E VOL: 0
; 0000 01F6                     ClrBit(PORTA, 0b10000000);
;PCODE: $0000099F VOL: 0
;PCODE: $000009A0 VOL: 0
; 0000 01F7                     enc2 = 0;
;PCODE: $000009A1 VOL: 0
;PCODE: $000009A2 VOL: 0
; 0000 01F8                 }
; 0000 01F9                 dir_cnt2--;
;PCODE: $000009A3 VOL: 0
;PCODE: $000009A4 VOL: 0
;PCODE: $000009A5 VOL: 0
;PCODE: $000009A6 VOL: 0
; 0000 01FA             }
; 0000 01FB             else
;PCODE: $000009A7 VOL: 0
;PCODE: $000009A8 VOL: 0
; 0000 01FC             {
; 0000 01FD                 if (dir_cnt2 == _dir_cnt2)
;PCODE: $000009A9 VOL: 0
;PCODE: $000009AA VOL: 0
;PCODE: $000009AB VOL: 0
; 0000 01FE                 {
; 0000 01FF                     dir_cnt2 = _dir_cnt;
;PCODE: $000009AC VOL: 0
;PCODE: $000009AD VOL: 0
; 0000 0200                     ClrBit(PORTA, 0b10000000);
;PCODE: $000009AE VOL: 0
;PCODE: $000009AF VOL: 0
; 0000 0201                     enc2 = 1;
;PCODE: $000009B0 VOL: 0
;PCODE: $000009B1 VOL: 0
; 0000 0202                 }
; 0000 0203                 dir_cnt2++;
;PCODE: $000009B2 VOL: 0
;PCODE: $000009B3 VOL: 0
;PCODE: $000009B4 VOL: 0
;PCODE: $000009B5 VOL: 0
; 0000 0204             }
;PCODE: $000009B6 VOL: 0
; 0000 0205 
; 0000 0206             dir2 = 1;
;PCODE: $000009B7 VOL: 0
;PCODE: $000009B8 VOL: 0
; 0000 0207         }
; 0000 0208         if (TestBit(PINC, 0x08))
;PCODE: $000009B9 VOL: 0
;PCODE: $000009BA VOL: 0
;PCODE: $000009BB VOL: 0
;PCODE: $000009BC VOL: 0
; 0000 0209         {
; 0000 020A             if (!chorus)
;PCODE: $000009BD VOL: 0
;PCODE: $000009BE VOL: 0
;PCODE: $000009BF VOL: 0
; 0000 020B             {
; 0000 020C                 chorus = 1;
;PCODE: $000009C0 VOL: 0
;PCODE: $000009C1 VOL: 0
;PCODE: $000009C2 VOL: 0
; 0000 020D                 lcd_out();
;PCODE: $000009C3 VOL: 0
; 0000 020E             }
; 0000 020F         }
;PCODE: $000009C4 VOL: 0
; 0000 0210         else
;PCODE: $000009C5 VOL: 0
;PCODE: $000009C6 VOL: 0
; 0000 0211             if (chorus)
;PCODE: $000009C7 VOL: 0
;PCODE: $000009C8 VOL: 0
;PCODE: $000009C9 VOL: 0
; 0000 0212             {
; 0000 0213                 chorus = 0;
;PCODE: $000009CA VOL: 0
;PCODE: $000009CB VOL: 0
;PCODE: $000009CC VOL: 0
; 0000 0214                 lcd_out();
;PCODE: $000009CD VOL: 0
; 0000 0215             }
; 0000 0216     };
;PCODE: $000009CE VOL: 0
;PCODE: $000009CF VOL: 0
;PCODE: $000009D0 VOL: 0
;PCODE: $000009D1 VOL: 0
; 0000 0217 }
;PCODE: $000009D2 VOL: 0
;PCODE: $000009D3 VOL: 0
;PCODE: $000009D4 VOL: 0

	.DSEG
_0x13A:
	.BYTE 0x55
